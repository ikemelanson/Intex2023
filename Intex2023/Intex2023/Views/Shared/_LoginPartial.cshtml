@using IdentityManagerUI.Models;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager



@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage User Settings">User Info</a>
    </li>

    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link w-100">Logout</button>
        </form>
    </li>
    
    
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>

}
@*@{
    var user = UserManager.Users.FirstOrDefault(x => x.Id == UserManager.GetUserId(User));
}

@if (await UserManager.IsInRoleAsync( user , "Admin"))
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Logout">Hello</a>
    </li>
}*@